{"version":3,"sources":["components/content/loading.svg","components/buttons/NavigationButton.jsx","components/player/NavigationSection.jsx","components/player/Player.jsx","components/content/ContentView.jsx","history.js","app/config.js","app/content/model.js","app/content/reducer.js","app/content/actions.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","styled","Link","_templateObject","Container","div","NavigationSection_templateObject","NavigationSection","_ref","prevUrl","nextUrl","react_default","a","createElement","NavigationButton","to","InfoBlock","Player_templateObject","Title","h1","_templateObject2","Description","_templateObject3","Date","_templateObject4","Poster","_templateObject5","Player","state","showOverlay","initialized","playContent","_this","player","play","renderPoster","content","onClick","className","src","backgroundImage","alt","width","height","_this2","this","videojs","videoNode","props","console","log","on","setState","dispose","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","key","id","title","distanceInWords","playbackDuration","Player_Date","format","createdAt","description","player_NavigationSection","_this3","data-vjs-player","ref","node","renderOverlay","React","Component","ContentView_templateObject","ContentView","params","match","contents","length","contentId","find","c","parseInt","currentIdx","findIndex","next","concat","slug","first","prev","last","getContentToRender","loadingImg","genNextUrl","genPrevUrl","videoJsOptions","autoplay","controls","fill","responsive","poster","sources","playbackUrl","type","ContentView_Container","Player_Player","Object","assign","PureComponent","connect","list","createBrowserHistory","config","findMediaInAsset","asset","item","findAssetTypeInAssets","assets","Content","jsonData","classCallCheck","parseDescription","parseBackgroundImage","_this$parsePlaybackDa","parsePlaybackData","_this$parsePlaybackDa2","slicedToArray","createClass","value","trim","assetsJson","thumbnail","url","associatedVideoAssets","videoAsset","sample","videoAssetFallback","INITIAL_STATE","reducer","arguments","undefined","action","payload","map","objectSpread","receiveContents","history","store","createStore","combineReducers","router","connectRouter","contentReducer","createRootReducer","composeWithDevTools","applyMiddleware","routerMiddleware","thunk","dispatch","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","fetch","sent","json","stop","_x","apply","routes","es","esm","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b3e31ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.5d5d9eef.svg\";","import { Link } from 'react-router-dom';\nimport styled from 'styled-components'\n\nconst Button = styled(Link)`\n  display: inline-block;\n  border-radius: 5px;\n  padding: 0.7rem 0;\n  margin: 0.5rem 1rem;\n  width: 11rem;\n  background: #151515;\n  color: white;\n  text-decoration: none;\n  text-align: center;\n  font-weight: 500;\n`\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NavigationButton from '../buttons/NavigationButton'\n\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  right: 0;\n  bottom: 5px;\n  position: absolute;\n`\n\nconst NavigationSection  = ({prevUrl, nextUrl}) => (\n  <Container>\n    <NavigationButton to={prevUrl}>PREV VIDEO</NavigationButton>\n    <NavigationButton to={nextUrl}>NEXT VIDEO</NavigationButton>\n  </Container>\n)\n\nNavigationSection.propTypes = {\n  prevUrl: PropTypes.string.isRequired,\n  nextUrl: PropTypes.string.isRequired,\n};\n\nexport default NavigationSection\n","import React from 'react'\nimport videojs from 'video.js'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport NavigationSection from './NavigationSection'\nimport styled from 'styled-components'\n\nimport distanceInWords from 'date-fns/distance_in_words'\nimport format from 'date-fns/format'\n\nimport 'video.js/dist/video-js.css'\n\nconst InfoBlock = styled.div`\n  font-size: 1.5em;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  background-color:#e4e4e4;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: 15px;\n  height: auto;\n  width: 100%;\n  border: 1px blue #e4e4e4;\n  z-index: 5;\n`\n\nconst Title = styled.h1`\n  color: #151515;\n  font-size: 2em;\n  text-align: left;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`\n\nconst Description = styled.p`\n  font-size: 1.3em;\n  color: #545454;\n  text-align: left;\n  max-width: 60%;\n  margin-top: 10px;\n`\n\nconst Date = styled(Description)`\n  font-size: 1em;\n`\n\nconst Poster = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 99%;\n  z-index: 4;\n`\n\nexport default class Player extends React.Component {\n  state = { showOverlay: true, initialized: false }\n\n  componentDidMount() {\n    // instantiate Video.js\n    this.player = videojs(this.videoNode, this.props, () => {\n      console.log('onPlayerReady', this)\n    });\n\n    this.player.on('play', () => this.setState({ showOverlay: false, initialized: true }))\n    this.player.on('pause', () => this.setState({ showOverlay: true }))\n  }\n\n  // destroy player on unmount\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose()\n    }\n  }\n\n  playContent = () => {\n    this.player.play()\n  }\n\n  renderPoster = (content) => {\n    if (this.state.showOverlay === false) {\n      return null\n    }\n\n    return (\n      <Poster onClick={this.playContent}>\n        <div className=\"play-button\" onClick={this.playContent}></div>\n        {!this.state.initialized && <img src={content.backgroundImage} alt=\"cover\" width=\"100%\" height=\"100%\" />}\n      </Poster>\n    )\n  }\n\n  renderOverlay(content) {\n    return (\n      <ReactCSSTransitionGroup\n        transitionName='fade'\n        transitionAppear={true}\n        transitionAppearTimeout={500}\n        transitionEnterTimeout={500}\n        transitionLeaveTimeout={300}\n      >\n        {this.state.showOverlay && <InfoBlock key={content.id}>\n          <Title>{content.title} ({distanceInWords(0, content.playbackDuration)})</Title>\n          <Date>{format(content.createdAt, 'MMMM DD, YYYY')}</Date>\n          <Description>{content.description}</Description>\n          <NavigationSection prevUrl={this.props.prevUrl} nextUrl={this.props.nextUrl} />\n        </InfoBlock>}\n      </ReactCSSTransitionGroup>\n    )\n  }\n\n  render() {\n    const { content } = this.props;\n    return (\n      <div data-vjs-player>\n        <video ref={ node => this.videoNode = node } className=\"video-js\"></video>\n        {this.renderOverlay(content)}\n        {this.renderPoster(content)}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport Player from '../player/Player'\nimport styled from 'styled-components'\nimport find from 'lodash/find'\nimport findIndex from 'lodash/findIndex'\n\nimport loadingImg from './loading.svg'\n\nconst Container = styled.div`\n  width: 99vw;\n  height: 99vh;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 1vh;\n`\n\nconst mapStateToProps = (state) => {\n  return {\n    contents: state.contents.list\n  }\n}\n\nclass ContentView extends React.PureComponent {\n\n  getContentToRender() {\n    const { params } = this.props.match\n    const { contents } = this.props\n\n    if (contents.length === 0) {\n      return null\n    }\n\n    if (params.contentId) {\n      return find(\n        contents,\n        c => c.id === parseInt(params.contentId, 10)\n      )\n    } else {\n      return contents[0]\n    }\n  }\n\n  genNextUrl(content) {\n    const { contents } = this.props\n    const currentIdx = findIndex(contents, c => c.id === content.id)\n\n    // if it is not the last element return the next one\n    if (contents[currentIdx + 1]) {\n      const next = contents[currentIdx + 1]\n      return `/content/${next.slug}/${next.id}`\n    } else {\n      // otherwise return the first element\n      const first = contents[0]\n      return `/content/${first.slug}/${first.id}`\n    }\n  }\n\n  genPrevUrl(content) {\n    const { contents } = this.props\n    const currentIdx = findIndex(contents, c => c.id === content.id)\n\n    // if it is not the first element return the previous one\n    if (contents[currentIdx - 1]) {\n      const prev = contents[currentIdx - 1]\n      return `/content/${prev.slug}/${prev.id}`\n    } else {\n      // otherwise return the last element\n      const last = contents[contents.length - 1]\n      return `/content/${last.slug}/${last.id}`\n    }\n  }\n\n  render() {\n    const content = this.getContentToRender()\n      if (!content) {\n        return <img src={loadingImg} className=\"loading-atom\" alt=\"logo\" />\n      }\n\n      const nextUrl = this.genNextUrl(content)\n      const prevUrl = this.genPrevUrl(content)\n\n      const videoJsOptions = {\n        autoplay: false,\n        controls: true,\n        fill: true,\n        responsive: true,\n        poster: content.backgroundImage,\n        sources: [{\n          src: content.playbackUrl,\n          type: 'video/mp4'\n        }]\n      }\n\n      return (\n        <Container key={content.id}>\n          <Player\n            { ...videoJsOptions }\n            content={content}\n            prevUrl={prevUrl}\n            nextUrl={nextUrl}\n          />\n        </Container>\n      )\n  }\n}\n\nContentView.propTypes = {\n  contents: PropTypes.array.isRequired,\n  match: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(ContentView)\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","\nexport default {\n  backendHost: 'https://tm-kitchen-api-alpha.herokuapp.com',\n  backendEndpoint: '/videos?api_key=homework&auth_token=1&limit=10&workflow_status=ready'\n}\n","import find from 'lodash/find';\n\nfunction findMediaInAsset(asset) {\n  return find(\n    asset['video_asset']['mp4_renditions'],\n    item => item['width'] === 1280 && item['height'] === 720\n  )\n}\n\nfunction findAssetTypeInAssets(assets, type) {\n  return find(\n    assets,\n    item => item['is_primary'] && item['slot_type'] === type\n  )\n}\n\nexport class Content {\n  id = 0\n  title = ''\n  description = ''\n  createdAt = ''\n  slug = ''\n  backgroundImage = ''\n  playbackUrl = ''\n  playbackDuration = 0\n\n  constructor(jsonData) {\n    this.id = jsonData['id']\n    this.title = jsonData['title']\n    this.description = this.parseDescription(jsonData['description'])\n    this.createdAt = new Date(jsonData['created_date'])\n    this.slug = jsonData['slug']\n    this.backgroundImage = this.parseBackgroundImage(jsonData['associated_assets'])\n    const [playbackUrl, playbackDuration] = this.parsePlaybackData(jsonData['associated_video_assets'])\n    this.playbackUrl = playbackUrl\n    this.playbackDuration = playbackDuration\n  }\n\n  parseDescription(description) {\n    if (!description || description.trim() === '') {\n      return 'No description.'\n    }\n\n    return description\n  }\n\n  parseBackgroundImage(assetsJson) {\n    const thumbnail = find(\n      assetsJson,\n      item => item['is_primary'] && item['slot_type'] === 'landscape_thumbnail_asset'\n    )\n\n    if (thumbnail) {\n      return thumbnail.asset.url\n    }\n\n    return '';\n  }\n\n  parsePlaybackData(associatedVideoAssets) {\n    const videoAsset = findAssetTypeInAssets(associatedVideoAssets, 'landscape_asset_video_asset')\n\n    if (videoAsset) {\n      const sample = findMediaInAsset(videoAsset)\n      if (sample) {\n        return [sample.url, videoAsset['video_asset']['duration']]\n      }\n    }\n\n    const videoAssetFallback = findAssetTypeInAssets(associatedVideoAssets, 'square_asset_video_asset')\n\n    if (videoAssetFallback) {\n      const sample = findMediaInAsset(videoAssetFallback)\n      if (sample) {\n        return [sample.url, videoAssetFallback['video_asset']['duration']]\n      }\n    }\n    return ['', 0];\n  }\n}\n","import { RECEIVE_CONTENTS } from './actions'\nimport { Content } from './model'\n\nconst INITIAL_STATE = {\n  list: []\n}\n\nfunction receiveContents(state, payload) {\n  const contents = payload.map((item) => new Content(item))\n  return {\n    ...state,\n    list: contents\n  }\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n   case RECEIVE_CONTENTS:\n    return receiveContents(state, action.payload)\n   default:\n    return state\n  }\n }\n","import config from '../config'\n\nexport const RECEIVE_CONTENTS = 'RECEIVE_CONTENTS'\n\nexport const getContents = () => async (dispatch) => {\n  const url = config.backendHost + config.backendEndpoint\n  const response = await fetch(url)\n  const data = await response.json()\n\n  dispatch({\n   type: RECEIVE_CONTENTS,\n   payload: data\n  })\n }\n","import {\n  combineReducers,\n  createStore,\n  applyMiddleware\n} from 'redux'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport contentReducer from '../app/content/reducer'\n\nfunction createRootReducer(history) {\n  return combineReducers({\n    router: connectRouter(history),\n    contents: contentReducer\n  })\n}\n\nexport default function configureStore(history) {\n  return createStore(\n    createRootReducer(history),\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk\n      )\n    )\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport ContentView from './components/content/ContentView'\nimport history from './history'\nimport configureStore from './store'\nimport { getContents } from './app/content/actions'\n\nimport './index.css'\n\nconst store = configureStore(history)\nstore.dispatch(getContents())\n\nconst routes = (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ContentView}/>\n          <Route exact path=\"/content/:contentTitle/:contentId\" component={ContentView} />\n        </Switch>\n      </Router>\n    </ConnectedRouter>\n  </Provider>\n)\n\nReactDOM.render(routes, document.getElementById('root'))\n"],"sourceRoot":""}